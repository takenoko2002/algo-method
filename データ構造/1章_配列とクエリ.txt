1-1
5

1-2
-----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------

array = [3,1,4,1,5,9,2,6,5,3]

k = int(input())

print(array[k])

1-3
-----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------
ar = [3,1,4,1,5,9,2,6,5,3]

Q = int(input())

for i in range(Q):
    query = list(map(int,input().split()))

    if query[0] == 0:
        print(ar[query[1]])
    else:
        ar[query[1]] = query[2]

1-4
-----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------

N,k = map(int,input().split())

ar = list(map(int,input().split()))

print(ar[k])

print(ar[-k-1])

1-5
-----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------
N = int(input())
A = list(map(int,input().split()))
Q = int(input())

for i in range(Q):
    query = list(map(int,input().split()))

    if query[0] == 0:
        if query[1] <= len(A) -1:
            print(A[query[1]])
        else:
            print('Error')
    else:
        A.append(query[1])

-----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------
